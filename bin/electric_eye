#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'construct'
require 'electric_eye.rb'

class App
  include Methadone::Main
  include Methadone::CLILogging

  main do |camera, url| # Add args you want: |like,so|
    # your program code here
    # You can access CLI options via
    # the options Hash
    puts options

    dir = check_dir
    file = "#{dir}/config.yml"
    
    if File.exist?(file)
      @config = Construct.load File.read(file)
    else
      @config = Construct.new
      @config.cameras = []
    end
    
    if options[:a]
      @config.cameras.push({name: camera, url: url})
      File.open(file, 'w'){ |f| f.write @config.to_yaml } # Store
      info "Camera added"
    end
  end

  # Check the directory and if it doesn't exist create it.
  def self.check_dir
    dir = "#{ENV['HOME']}/.electric_eye"
    unless Dir.exist?(dir)
      Dir.mkdir(dir)
    end
    dir
  end
  
  # supplemental methods here

  # Declare command-line interface here

  description "Network Video Recorder"

  #
  # Accept flags via:
  on("-a", "--add", "Add a camera") 

  # on("--flag VAL","Some flag")
  # options[flag] will contain VAL
  #
  # Specify switches via:
  # on("--[no-]switch","Some switch")
  #
  # Or, just call OptionParser methods on opts
  #
  # Require an argument
  # arg :some_arg 
  #
  # # Make an argument optional
  # arg :optional_arg, :optional
  arg :camera, :optional
  arg :url, :optional

  version ElectricEye::VERSION

  use_log_level_option :toggle_debug_on_signal => 'USR1'

  go!
end
