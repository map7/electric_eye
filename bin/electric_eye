#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'construct'
require 'electric_eye.rb'
include ElectricEye

class App
  include Methadone::Main
  include Methadone::CLILogging

  main do |camera, url| # Add args you want: |like,so|
    @configEye = ConfigEye.new     # Initialize config
    
    if options[:a]              # Add camera
      @configEye.add_camera(camera,url) 
    elsif options[:r]           # Remove camera
      @configEye.remove_camera(camera)
    elsif options[:d]
      @configEye.set_duration(options[:duration])
    elsif options[:p]
      @configEye.set_path(options[:path])
    end
    
    exit 0
  end
  
  description "Network Video Recorder"

  # Accept flags via:
  on("-a", "--add", "Add a camera") 
  on("-r", "--remove", "Remove a camera")
  on("-d", "--duration SECONDS", "Set recording duration in seconds")
  on("-p", "--path DIR", "Set recordings path")

  # Arguments
  arg :camera, :optional
  arg :url, :optional

  version ElectricEye::VERSION
  use_log_level_option :toggle_debug_on_signal => 'USR1'

  go!
end
